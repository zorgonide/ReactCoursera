{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","About","RenderLeader","leader","leaders","in","title","list","required","val","length","maxLength","len","RenderDish","transformProps","exitTransform","top","description","RenderComments","comments","postComment","dishId","commentList","comment","author","Intl","DateTimeFormat","day","month","year","format","Date","date","DishDetail","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","outline","onClick","isOpen","toggle","onSubmit","for","md","select","model","htmlFor","text","placeholder","validators","minLength","show","messages","textarea","resize","rows","type","value","color","Component","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","console","log","JSON","stringify","resetFeedbackForm","role","size","offset","checkbox","addFeedback","feedback","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","lead","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d152376.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n                <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n                <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem ({dish}) {\r\n    return(\r\n        <Card>\r\n            <Link to = {`/menu/${dish.id}`}>\r\n                <CardImg width=\"100\" src={ baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <br></br>\r\n                    <RenderMenuItem dish={dish} />\r\n            </div>\r\n        )\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader ({ leader}) {\r\n        return (\r\n            // <div key={leader.id} className=\"col-md-12 mt-4 \">\r\n                \r\n                    <Media >\r\n                        <Media left bottom>\r\n                            <Media object src = {baseUrl + leader.image} alt = {leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-3\t \">\r\n                            <Media heading>\r\n                                {leader.name}\r\n                            </Media>\r\n                            <div className = \".d-none\">\r\n                                <p>{leader.designation}</p>\r\n                                <p>{leader.description}</p>\r\n                            </div>\r\n                        </Media>\r\n                    </Media>\r\n                \r\n                \r\n            // </div>\r\n        );\r\n    }\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <li className=\"list-unstyled\">\r\n                    <RenderLeader key={leader.id} leader={leader}></RenderLeader>\r\n                </li>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>{leaders}</Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem , Button,  Modal, ModalHeader, ModalBody, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({dish}){\r\n    if (dish != null) {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n} \r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    \r\n    const commentList = comments.map(comment => {\r\n        return (\r\n            <Fade in>\r\n                <li key= {comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p><i>{comment.author}</i>,\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-GB', {\r\n                        day: '2-digit',\r\n                        month: 'long',\r\n                        year: 'numeric'\r\n\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                    <hr></hr>\r\n                </li>\r\n            </Fade>\r\n        )\r\n    });\r\n    return(\r\n        <div>\r\n            <h4> Comments </h4>\r\n            <ul className='list-unstyled'>\r\n                <Stagger in>\r\n                    {commentList}\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst DishDetail = props => {\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\nexport default DishDetail\r\n\r\nexport class CommentForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"> Submit comment</span>\r\n                </Button>\r\n\r\n                <div>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}> Submit comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"col-12 col-md-9\">\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row  className=\"form-group\">\r\n                                    <Label for=\"rating\" md={12}>Rating</Label>\r\n                                    <Col  md={12}>\r\n                                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\"  md={12}>Your Name</Label>\r\n                                    <Col  md={12}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(2), maxLength: maxLength(15) }} />\r\n                                        <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required ', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less' }} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"feedback\"  md={12}>Your feedback</Label>\r\n                                    <Col  md={12}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" resize=\"none\" rows=\"6\" className=\"form-control\" validators={{ required }} />\r\n                                        <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </LocalForm>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me? \r\n                                </Label>\r\n                            </FormGroup>\r\n                            <hr></hr>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nconst RenderCard = ({item, isLoading, errMess}) => {\r\n  if (isLoading) {\r\n    return(\r\n      <Loading />\r\n    );\r\n  }\r\n  else if (errMess) {\r\n    return(\r\n      <h4>{errMess}</h4>\r\n    );\r\n  }\r\n  else \r\n    return(\r\n      <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n        </FadeTransform>\r\n  );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"col-12\">\r\n            <h3>Home</h3>\r\n            <hr />\r\n        </div>\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-12 col-md m-1\">\r\n           <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n           <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home; ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(\r\n            values.firstname,\r\n            values.lastname,\r\n            values.telnum,\r\n            values.email,\r\n            values.agree,\r\n            values.contactType,\r\n            values.message\r\n          )\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype:example123?chat\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postFeedback = ( firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        // feedID: feedID,\r\n        firstname: firstname, \r\n        lastname: lastname, \r\n        telnum: telnum, \r\n        email: email, \r\n        agree: agree, \r\n        contactType: contactType, \r\n        message:message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post feedbacks', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACKS,\r\n    payload: feedback\r\n});\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES'; \r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACKS = 'ADD_FEEDBACKS';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n} \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: ( firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n \r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n}\r\n\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          // leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          leader={this.props.leaders.leaders.filter((lead) => lead.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />  \r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback= {this.props.postFeedback} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    \r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}